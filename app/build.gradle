apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: RocooFixPlugin

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
repositories {
//    maven { url 'http://uk.maven.org/maven2' }
//    maven { url 'https://raw.githubusercontent.com/umeng/mvn-repo-umeng/master/repository' }
    jcenter()
    mavenCentral()
}

android {
    compileSdkVersion 24
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion 11
        applicationId "com.camnter.newlife"
        targetSdkVersion 24
        versionCode 2
        versionName "1.0"
    }
    buildTypes {
        release {
            println("====== buildTypes.release ======")
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            manifestPlaceholders = [DEBUG: "release"]
        }
        debug {
            println("====== buildTypes.debug ======")
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            manifestPlaceholders = [DEBUG: "debug"]
        }
    }
//    // 渠道Flavors
//    productFlavors {
//        debug {
//            applicationId "com.camnter.newlife"
//            manifestPlaceholders = [DEBUG: "debug"]
//        }
//    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    // Google
    compile 'com.android.support:support-v4:'+rootProject.supportLibVersion
    compile 'com.android.support:appcompat-v7:'+rootProject.supportLibVersion
    compile 'com.android.support:recyclerview-v7:'+rootProject.supportLibVersion
    compile 'com.android.support:design:'+rootProject.supportLibVersion
    compile 'com.google.code.gson:gson:2.4'
    // camnter
    compile 'com.camnter.easyslidingtabs:easyslidingtabs:0.2.1'
    compile 'com.camnter.easyrecyclerview:easyrecyclerview:1.3'
    compile 'com.camnter.easyarcloading:easyarcloading:1.0'
    compile 'com.camnter.easylikearea:easylikearea:1.3'
    compile 'com.camnter.easyrecyclerviewsidebar:easyrecyclerviewsidebar:1.3'
    // ReactiveX
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.16'
    // Square
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.picasso:picasso:2.5.2'
    // Alibaba
    compile 'com.alibaba:fastjson:1.2.7'
    // Glide
    compile 'com.github.bumptech.glide:glide:3.6.1'
    // butterknife
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    compile project(':otto')
    compile project(':volley')
    compile project(':agera-1.0.0')
    compile project(':stackblur')
    compile project(':hotfix')
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
}

task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'libs', include: '**/*.so')
    from fileTree(dir: 'renderscript', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}


